{"version":3,"sources":["firebase.js","Image.js","FirebaseNotes.js","SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Image","url","alt","author","className","src","library","add","faTimes","Notes","noteText","id","index","converter","require","useState","hovered","setHovered","toggleHover","toWords","onMouseEnter","onMouseLeave","onClick","database","ref","child","remove","icon","spin","SearchBar","action","htmlFor","name","defaultValue","value","Component","App","handleAdd","e","preventDefault","dbRef","state","userInput","setState","inputError","push","handleInputChange","target","allTheImages","allTheNotes","on","data","firebaseDataObject","val","notesArray","propertyKey","formattedObj","this","onChange","type","map","noteObject","imageObject","urls","regular","alt_description","user","first_name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc40d37a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCy7FRllKiIsyDWTtq3VW_9InsAuQiu4ZE\",\n    authDomain: \"project5-19534.firebaseapp.com\",\n    databaseURL: \"https://project5-19534.firebaseio.com\",\n    projectId: \"project5-19534\",\n    storageBucket: \"project5-19534.appspot.com\",\n    messagingSenderId: \"574477794353\",\n    appId: \"1:574477794353:web:61154bfb041df22e796910\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","const Image = ({ url, alt, author }) => {\n    return (\n        <div className=\"image-title-container flex column\">\n\n            <img src={url} alt={alt} />\n            <p>Image by {author}</p>\n        </div>\n    )\n}\nexport default Image;","import firebase from './firebase.js';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useState } from 'react';\nlibrary.add(faTimes);\n\n\nconst Notes = ({ noteText, id, index }) => {\n    const converter = require('number-to-words'); \n    const [hovered, setHovered] = useState(false);\n    const toggleHover = () => setHovered(!hovered);\n\n    return (\n        <li>\n            <h3>note {converter.toWords(index)}</h3>\n            <p className=\"note-text\">{noteText}</p>\n            <button\n                className=\"remove-btn\"\n                onMouseEnter={toggleHover}\n                onMouseLeave={toggleHover}\n                onClick={() => {\n                    const dbRef = firebase.database().ref();\n                    dbRef.child(id).remove();\n                }}>\n                <FontAwesomeIcon\n                    icon={['fas', 'times']}\n                    spin={hovered ? true : false}\n                />\n            </button>\n        </li>\n    )\n}\n\nexport default Notes;","import { Component } from 'react';\n\n\nclass SearchBar extends Component {\n    render() {\n        return (\n            <form action=\"\">\n                <label htmlFor=\"images-dropdown\">Search</label>\n                <div className=\"dropdown flex\">\n                    <select name=\"images-dropdown\" id=\"images-dropdown\">\n                        <option defaultValue=\"default\" value=\"select\">Where to?</option>\n                        <option value=\"hawaii\">Hawaii</option>\n                        <option value=\"covid\">I hate Covid, take me anywhere</option>\n                    </select>\n                    <button className=\"dropdown-btn\">Take me there</button>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default SearchBar;","import { Component } from 'react';\nimport axios from 'axios';\nimport firebase from './firebase.js'\nimport './App.scss';\nimport Image from './Image.js';\nimport Notes from './FirebaseNotes.js'\nimport SearchBar from './SearchBar.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allTheImages: [],\n      allTheNotes: [],\n      userInput: '',\n      inputError: false,\n    }\n  }\n\n\n    // axios({\n    //   url: `https://api.unsplash.com/search/photos`,\n    //   method: 'get',\n    //   responseType: 'json',\n    //   params: {\n    //     query: 'Hawaii',\n    //     client_id: `oEqXIabqhgGGmg6GNvKh8BohaoPNI5X5XX-FO1zKQgk`,\n    //     page: 1,\n    //     per_page: 10,\n    //     orientation: 'landscape',\n    //   }\n    // })\n    //   .then((res) => {\n    //     this.setState({\n    //       allTheImages: res.data.results,\n    //     })\n    //   })\n\ncomponentDidMount() {\n    const dbRef = firebase.database().ref();\n    // get data from database \n    dbRef.on('value', (data) => {\n      const firebaseDataObject = data.val();\n      let notesArray = [];\n      for (let propertyKey in firebaseDataObject) {\n        const propertyValue = firebaseDataObject[propertyKey];\n        const formattedObj = {\n          id: propertyKey,\n          name: propertyValue,\n        };\n        notesArray.push(formattedObj)\n      }\n\n      this.setState({\n        allTheNotes: notesArray,\n      })\n    })\n  }\n\n\n  handleAdd = (e) => {\n    e.preventDefault();\n    const dbRef = firebase.database().ref();\n    if (this.state.userInput === '') {\n      this.setState({\n        inputError: true,\n      })\n    } else {\n      dbRef.push(this.state.userInput);\n    }\n    this.setState({\n      userInput: '',\n    })\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      userInput: e.target.value,\n      inputError: false,\n    })\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"flex wrapper main-container\">\n          <header className=\"flex column\">\n            <div className=\"header-text\">\n              <h1>Travel from home</h1>\n              <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Labore sequi delectus dicta incidunt, quod vero,\n              placeat mollitia sit modi repudiandae perspiciatis, commodi voluptatum soluta architecto officiis eius!\n              Adipisci laborum esse repellat nemo accusamus sunt ex amet expedita repudiandae ad,\n              sit laboriosam ab nobis debitis ullam ducimus numquam nulla odio max.\n                <br />\n                <br />\n            Inspired, and wish to leave a note?</p>\n\n              <form className=\"notes-form\">\n                <label htmlFor=\"newNote\">Travel Journal</label> \n                <textarea\n                  className={`new-note ${this.state.inputError === true ? 'error' :''}`}\n                  onChange={this.handleInputChange}\n                  type=\"text\"\n                  id=\"newNote\" //- change to kebob\n                  value={this.state.userInput}\n                />\n                <button onClick={this.handleAdd}>Add a note</button>\n              </form>\n\n              <ul>\n                {\n                  this.state.allTheNotes.map((noteObject, index) => {\n                    return (\n                      <Notes\n                        key={noteObject.id}\n                        id={noteObject.id}\n                        noteText={noteObject.name}\n                        index={index+1}\n                      />\n                    )\n                  })\n                }\n              </ul>\n            </div>\n          </header>\n\n          <main className=\"flex column\">\n            <SearchBar />\n            <h2>Your Destination</h2>\n            {\n              this.state.allTheImages.map((imageObject) => {\n                return (\n                  <Image\n                    key={imageObject.id}\n                    url={imageObject.urls.regular}\n                    alt={imageObject.alt_description}\n                    author={imageObject.user.first_name}\n                  />\n                )\n              })\n            }\n          </main>\n        </div>\n        <footer className=\"wrapper\">\n          <p>Aleksandra Petryga @ Juno College</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}