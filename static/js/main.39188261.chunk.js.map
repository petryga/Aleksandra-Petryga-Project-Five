{"version":3,"sources":["firebase.js","Image.js","FirebaseNotes.js","SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Image","url","alt","author","className","src","library","add","faTimes","Notes","noteText","id","index","converter","require","useState","hovered","setHovered","toggleHover","toWords","onMouseEnter","onMouseLeave","onClick","database","ref","child","remove","icon","spin","SearchBar","handleInputChange","e","setState","userSelection","target","value","handleSubmit","preventDefault","props","functionAxiosCall","state","htmlFor","name","onChange","this","disabled","Component","App","fetchImages","val","axios","method","responseType","params","query","client_id","page","per_page","orientation","then","res","allTheImages","data","results","catch","alert","handleAdd","dbRef","userInput","inputError","push","allTheNotes","on","firebaseDataObject","notesArray","propertyKey","formattedObj","type","map","noteObject","imageObject","urls","regular","alt_description","user","first_name","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39188261.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCy7FRllKiIsyDWTtq3VW_9InsAuQiu4ZE\",\n    authDomain: \"project5-19534.firebaseapp.com\",\n    databaseURL: \"https://project5-19534.firebaseio.com\",\n    projectId: \"project5-19534\",\n    storageBucket: \"project5-19534.appspot.com\",\n    messagingSenderId: \"574477794353\",\n    appId: \"1:574477794353:web:61154bfb041df22e796910\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","const Image = ({ url, alt, author }) => {\n    return (\n        <div className=\"image-container flex column\">\n            <img src={url} alt={alt ? alt : 'travel picture'} />\n            <p>Image by {author}</p>\n        </div>\n    )\n}\nexport default Image;","import firebase from './firebase.js';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useState } from 'react';\nlibrary.add(faTimes);\n\n\nconst Notes = ({ noteText, id, index }) => {\n    const converter = require('number-to-words'); \n    const [hovered, setHovered] = useState(false);\n    const toggleHover = () => setHovered(!hovered);\n\n    return (\n        <li>\n            <h3>note {converter.toWords(index)}</h3>\n            <p className=\"note-text\">{noteText}</p>\n            <button\n                className=\"remove-btn\"\n                onMouseEnter={toggleHover}\n                onMouseLeave={toggleHover}\n                onClick={() => {\n                    const dbRef = firebase.database().ref();\n                    dbRef.child(id).remove();\n                }}>\n                <FontAwesomeIcon\n                    icon={['fas', 'times']}\n                    spin={hovered ? true : false}\n                />\n            </button>\n        </li>\n    )\n}\n\nexport default Notes;","import { Component } from 'react';\n\nclass SearchBar extends Component {\n    constructor() {\n        super();\n        this.state = {\n            userSelection: 'way',\n        };\n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            userSelection: e.target.value\n        });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.functionAxiosCall(this.state.userSelection);\n    }\n\n    render() {\n        return (\n            <form>\n                <label htmlFor=\"images-dropdown\">Search</label>\n                <div className=\"dropdown flex\">\n                    <select\n                        name=\"images-dropdown\"\n                        id=\"images-dropdown\"\n                        onChange={this.handleInputChange}\n                        value={this.state.userSelection}>\n                        <option value=\"way\" disabled>Where to?</option>\n                        <option value=\"travel\">I hate Covid, take me anywhere</option>\n                        <option value=\"vancouver\">Vancouver</option>\n                        <option value=\"new york\">New York</option>\n                        <option value=\"hawaii\">Hawaii</option>\n                        <option value=\"california\">California!</option>\n                        <option value=\"greece\">Greece</option>\n                        <option value=\"iceland\">Iceland</option>\n                        <option value=\"waves beach\">I want to go surfing</option>\n                        <option value=\"ski mountain\">I want to go skiing</option>\n                        <option value=\"festival\">I just wanna party</option>\n                    </select>\n                    <button className=\"dropdown-btn\"\n                        onClick={this.handleSubmit}\n                    >Take me there</button>\n                </div>\n            </form>\n        )\n    }\n}\n\n\nexport default SearchBar;","import { Component } from 'react';\nimport axios from 'axios';\nimport firebase from './firebase.js'\nimport './App.scss';\nimport Image from './Image.js';\nimport Notes from './FirebaseNotes.js'\nimport SearchBar from './SearchBar.js';\n\n// install axios and do an api call to get the images\n\n// but only after the component has mounted to the page \n  // componentDidMount - if I want the images preloaded on a page \n\n// get the results after user selects something\n  // this.setState to save our returned data \n\n// have a render which will display the images on a page\n\n//configure Firebase on React\n//connect firebase data to the state\n//map through the book state to display each book\n//add remove button\n//on remove button click, remove the book that was clicked on, remove it from firebase\n//create an input form to get user's input value \n//on submit of the form, submit the user's input value to firebase\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allTheImages: [],\n      allTheNotes: [],\n      userInput: '',\n      inputError: false,\n    }\n  }\n\n  componentDidMount() {\n    const dbRef = firebase.database().ref();\n    dbRef.on('value', (data) => {\n      const firebaseDataObject = data.val();\n      let notesArray = [];\n      for (let propertyKey in firebaseDataObject) {\n        const propertyValue = firebaseDataObject[propertyKey];\n        const formattedObj = {\n          id: propertyKey,\n          name: propertyValue,\n        };\n        notesArray.push(formattedObj)\n      }\n      this.setState({\n        allTheNotes: notesArray,\n      })\n    })\n  }\n\n  fetchImages = (val) => {\n    axios({\n      url: `https://api.unsplash.com/search/photos`,\n      method: 'get',\n      responseType: 'json',\n      params: {\n        query: val,\n        client_id: `oEqXIabqhgGGmg6GNvKh8BohaoPNI5X5XX-FO1zKQgk`,\n        page: 1,\n        per_page: 15,\n        orientation: 'landscape',\n      }\n    })\n      .then((res) => {\n        this.setState({\n          allTheImages: res.data.results,\n        })\n      })\n      .catch(() => {\n        alert('no images ;(');\n      })\n  }\n\n  handleAdd = (e) => {\n    e.preventDefault();\n    const dbRef = firebase.database().ref();\n    if (this.state.userInput === '') {\n      this.setState({\n        inputError: true,\n      })\n    } else {\n      dbRef.push(this.state.userInput);\n    }\n    this.setState({\n      userInput: '',\n    })\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      userInput: e.target.value,\n      inputError: false,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"flex wrapper main-container\">\n          <header className=\"flex column\">\n            <div className=\"header-text\">\n              <h1>Travel <br />\n                from <br />\n                home</h1>\n              <p>We love to travel. But it’s not always possible to travel all the time - sometimes world events conspire against us...\n              <br/>\n              All is not lost however, and here is a way to travel from home! \n              <br/>\n              Please make a selection, and enjoy your trip!\n                <br />\n                <br />\n            Inspired for your future trip, and wish to take a note?</p>\n\n              <form className=\"notes-form\">\n                <label htmlFor=\"new-note\">Travel Journal</label>\n                <textarea\n                  className={`new-note ${this.state.inputError === true ? 'error' : ''}`}\n                  onChange={this.handleInputChange}\n                  type=\"text\"\n                  id=\"new-note\"\n                  value={this.state.userInput}\n                />\n                <button onClick={this.handleAdd}>Add a note</button>\n              </form>\n\n              <ul>\n                {\n                  this.state.allTheNotes.map((noteObject, index) => {\n                    return (\n                      <Notes\n                        key={noteObject.id}\n                        id={noteObject.id}\n                        noteText={noteObject.name}\n                        index={index + 1}\n                      />\n                    )\n                  })\n                }\n              </ul>\n            </div>\n          </header>\n\n          <main className=\"flex column\">\n            <SearchBar\n              functionAxiosCall={this.fetchImages}\n            />\n            <h2>Your Destination</h2>\n            {\n              this.state.allTheImages.map((imageObject) => {\n                return (\n                  <Image\n                    key={imageObject.id}\n                    url={imageObject.urls.regular}\n                    alt={imageObject.alt_description}\n                    author={imageObject.user.first_name}\n                  />\n                )\n              })\n            }\n          </main>\n        </div>\n        <footer className=\"wrapper\">\n          <p>Aleksandra Petryga @ Juno College</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}